{"expireTime":9007200883071645000,"key":"gatsby-plugin-mdx-entire-payload-98f1447986915c59b3b17b4f5478baf9--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Recursion is the process which comes into existence when a function calls a copy of itself to work on a\nsmaller problem. Any function which calls itself is called recursive function, and such function calls are\ncalled recursive calls. Recursion involves several numbers of recursive calls. However, it is important to\nimpose a termination condition of recursion. Recursion code is shorter than iterative code however it is\ndifficult to understand. The recursion function exercise program list has been given bellow. All the programs have\nbeen solved in three programming languages are C, C++ and Java. Start your journey with C, C++ and\nJava programming with the recursion function program list-","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":59,"offset":701},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":59,"offset":701},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Recursion Function Exercise Program List","position":{"start":{"line":8,"column":4,"offset":706},"end":{"line":8,"column":44,"offset":746},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":703},"end":{"line":8,"column":44,"offset":746},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to print first 50 natural numbers using recursion.","position":{"start":{"line":10,"column":4,"offset":753},"end":{"line":10,"column":75,"offset":824},"indent":[]}}],"position":{"start":{"line":10,"column":4,"offset":753},"end":{"line":10,"column":75,"offset":824},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":750},"end":{"line":10,"column":75,"offset":824},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to calculate the sum of numbers from 1 to n using recursion.","position":{"start":{"line":11,"column":4,"offset":829},"end":{"line":11,"column":85,"offset":910},"indent":[]}}],"position":{"start":{"line":11,"column":4,"offset":829},"end":{"line":11,"column":85,"offset":910},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":826},"end":{"line":11,"column":85,"offset":910},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to Print Fibonacci Series using recursion.","position":{"start":{"line":12,"column":4,"offset":915},"end":{"line":12,"column":67,"offset":978},"indent":[]}}],"position":{"start":{"line":12,"column":4,"offset":915},"end":{"line":12,"column":67,"offset":978},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":912},"end":{"line":12,"column":67,"offset":978},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to print the array elements using recursion.","position":{"start":{"line":13,"column":4,"offset":983},"end":{"line":13,"column":69,"offset":1048},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":983},"end":{"line":13,"column":69,"offset":1048},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":980},"end":{"line":13,"column":69,"offset":1048},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to count the digits of a given number using recursion.","position":{"start":{"line":14,"column":4,"offset":1053},"end":{"line":14,"column":79,"offset":1128},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":1053},"end":{"line":14,"column":79,"offset":1128},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1050},"end":{"line":14,"column":79,"offset":1128},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to find the sum of digits of a number using recursion.","position":{"start":{"line":15,"column":4,"offset":1133},"end":{"line":15,"column":79,"offset":1208},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":1133},"end":{"line":15,"column":79,"offset":1208},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1130},"end":{"line":15,"column":79,"offset":1208},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to find GCD of two numbers using recursion.","position":{"start":{"line":16,"column":4,"offset":1213},"end":{"line":16,"column":68,"offset":1277},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":1213},"end":{"line":16,"column":68,"offset":1277},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1210},"end":{"line":16,"column":68,"offset":1277},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to get the largest element of an array using recursion.","position":{"start":{"line":17,"column":4,"offset":1282},"end":{"line":17,"column":80,"offset":1358},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":1282},"end":{"line":17,"column":80,"offset":1358},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1279},"end":{"line":17,"column":80,"offset":1358},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to reverse a string using recursion.","position":{"start":{"line":18,"column":4,"offset":1363},"end":{"line":18,"column":61,"offset":1420},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":1363},"end":{"line":18,"column":61,"offset":1420},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1360},"end":{"line":18,"column":61,"offset":1420},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to find the Factorial of a number using recursion.","position":{"start":{"line":19,"column":5,"offset":1426},"end":{"line":19,"column":76,"offset":1497},"indent":[]}}],"position":{"start":{"line":19,"column":5,"offset":1426},"end":{"line":19,"column":76,"offset":1497},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1422},"end":{"line":19,"column":76,"offset":1497},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to convert a decimal number to binary using recursion.","position":{"start":{"line":20,"column":5,"offset":1503},"end":{"line":20,"column":80,"offset":1578},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":1503},"end":{"line":20,"column":80,"offset":1578},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1499},"end":{"line":20,"column":80,"offset":1578},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to check a number is a prime number or not using recursion.","position":{"start":{"line":21,"column":5,"offset":1584},"end":{"line":21,"column":85,"offset":1664},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":1584},"end":{"line":21,"column":85,"offset":1664},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1580},"end":{"line":21,"column":85,"offset":1664},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to find the LCM of two numbers using recursion.","position":{"start":{"line":22,"column":5,"offset":1670},"end":{"line":22,"column":73,"offset":1738},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":1670},"end":{"line":22,"column":73,"offset":1738},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1666},"end":{"line":22,"column":73,"offset":1738},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to print even or odd numbers in given range using recursion.","position":{"start":{"line":23,"column":5,"offset":1744},"end":{"line":23,"column":86,"offset":1825},"indent":[]}}],"position":{"start":{"line":23,"column":5,"offset":1744},"end":{"line":23,"column":86,"offset":1825},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1740},"end":{"line":23,"column":86,"offset":1825},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to multiply two matrix using recursion.","position":{"start":{"line":24,"column":5,"offset":1831},"end":{"line":24,"column":65,"offset":1891},"indent":[]}}],"position":{"start":{"line":24,"column":5,"offset":1831},"end":{"line":24,"column":65,"offset":1891},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1827},"end":{"line":24,"column":65,"offset":1891},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to calculate the power of any number using recursion.","position":{"start":{"line":25,"column":5,"offset":1897},"end":{"line":25,"column":79,"offset":1971},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":1897},"end":{"line":25,"column":79,"offset":1971},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1893},"end":{"line":25,"column":79,"offset":1971},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a program in C to find the first capital letter in a string using recursion.","position":{"start":{"line":26,"column":5,"offset":1977},"end":{"line":26,"column":87,"offset":2059},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":1977},"end":{"line":26,"column":87,"offset":2059},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1973},"end":{"line":26,"column":87,"offset":2059},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":750},"end":{"line":26,"column":87,"offset":2059},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Recursion Function Exercise Using C, C++ and Java\",\"category\":\"Programming Exercise\",\"author\":\"Anonymous\",\"tags\":[\"#c\",\"#tutorial\"],\"thumbnailText\":\"Recursion Function Program Exercise\",\"date\":\"2021-01-07T00:00:00.000Z\",\"featured\":true}","position":{"start":{"line":29,"column":1,"offset":2063},"end":{"line":29,"column":275,"offset":2337},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":29,"column":275,"offset":2337}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Recursion Function Exercise Using C, C++ and Java\",\n  \"category\": \"Programming Exercise\",\n  \"author\": \"Anonymous\",\n  \"tags\": [\"#c\", \"#tutorial\"],\n  \"thumbnailText\": \"Recursion Function Program Exercise\",\n  \"date\": \"2021-01-07T00:00:00.000Z\",\n  \"featured\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Recursion is the process which comes into existence when a function calls a copy of itself to work on a\\nsmaller problem. Any function which calls itself is called recursive function, and such function calls are\\ncalled recursive calls. Recursion involves several numbers of recursive calls. However, it is important to\\nimpose a termination condition of recursion. Recursion code is shorter than iterative code however it is\\ndifficult to understand. The recursion function exercise program list has been given bellow. All the programs have\\nbeen solved in three programming languages are C, C++ and Java. Start your journey with C, C++ and\\nJava programming with the recursion function program list-\"), mdx(\"h2\", {\n    \"id\": \"recursion-function-exercise-program-list\"\n  }, \"Recursion Function Exercise Program List\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to print first 50 natural numbers using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to calculate the sum of numbers from 1 to n using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to Print Fibonacci Series using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to print the array elements using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to count the digits of a given number using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to find the sum of digits of a number using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to find GCD of two numbers using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to get the largest element of an array using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to reverse a string using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to find the Factorial of a number using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to convert a decimal number to binary using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to check a number is a prime number or not using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to find the LCM of two numbers using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to print even or odd numbers in given range using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to multiply two matrix using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to calculate the power of any number using recursion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Write a program in C to find the first capital letter in a string using recursion.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Recursion Function Exercise Using C, C++ and Java\",\n  \"category\": \"Programming Exercise\",\n  \"author\": \"Anonymous\",\n  \"tags\": [\"#c\", \"#tutorial\"],\n  \"thumbnailText\": \"Recursion Function Program Exercise\",\n  \"date\": \"2021-01-07T00:00:00.000Z\",\n  \"featured\": true\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Recursion is the process which comes into existence when a function calls a copy of itself to work on a\nsmaller problem. Any function which calls itself is called recursive function, and such function calls are\ncalled recursive calls. Recursion involves several numbers of recursive calls. However, it is important to\nimpose a termination condition of recursion. Recursion code is shorter than iterative code however it is\ndifficult to understand. The recursion function exercise program list has been given bellow. All the programs have\nbeen solved in three programming languages are C, C++ and Java. Start your journey with C, C++ and\nJava programming with the recursion function program list-`}</p>\n    <h2 {...{\n      \"id\": \"recursion-function-exercise-program-list\"\n    }}>{`Recursion Function Exercise Program List`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Write a program in C to print first 50 natural numbers using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to calculate the sum of numbers from 1 to n using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to Print Fibonacci Series using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to print the array elements using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to count the digits of a given number using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to find the sum of digits of a number using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to find GCD of two numbers using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to get the largest element of an array using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to reverse a string using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to find the Factorial of a number using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to convert a decimal number to binary using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to check a number is a prime number or not using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to find the LCM of two numbers using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to print even or odd numbers in given range using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to multiply two matrix using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to calculate the power of any number using recursion.`}</li>\n      <li parentName=\"ol\">{`Write a program in C to find the first capital letter in a string using recursion.`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}