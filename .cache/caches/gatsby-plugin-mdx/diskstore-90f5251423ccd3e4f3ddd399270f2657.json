{"expireTime":9007200882776222000,"key":"gatsby-plugin-mdx-entire-payload-a16062691b97211ff47b9088674e59b0-/funycode-undefined","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"String Function in C","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":24,"offset":23},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":24,"offset":23},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"C does not provide any operators for string. Because of this C has built in string functions in its library.","position":{"start":{"line":2,"column":1,"offset":24},"end":{"line":2,"column":109,"offset":132},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":24},"end":{"line":2,"column":109,"offset":132},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"C library supports a large number of string handling functions that can be used to perform many of the string manipulations.","position":{"start":{"line":4,"column":3,"offset":136},"end":{"line":4,"column":127,"offset":260},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":136},"end":{"line":4,"column":127,"offset":260},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":134},"end":{"line":4,"column":127,"offset":260},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Some of the string functions are given below.","position":{"start":{"line":5,"column":3,"offset":263},"end":{"line":5,"column":48,"offset":308},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":263},"end":{"line":5,"column":48,"offset":308},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":261},"end":{"line":5,"column":48,"offset":308},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"To do all the operations described here it is essential to include string.h library header file in the program. Some of the String Functions in string.h.","position":{"start":{"line":6,"column":3,"offset":311},"end":{"line":6,"column":156,"offset":464},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":311},"end":{"line":6,"column":156,"offset":464},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strcpy(str1,str2)       copies str2 to str1 including the null (\\0).","position":{"start":{"line":7,"column":6,"offset":470},"end":{"line":7,"column":74,"offset":538},"indent":[]}}],"position":{"start":{"line":7,"column":6,"offset":470},"end":{"line":7,"column":74,"offset":538},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":467},"end":{"line":8,"column":1,"offset":539},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strcat(str1,str2)       Appends str2 to end of string str1","position":{"start":{"line":9,"column":6,"offset":545},"end":{"line":9,"column":64,"offset":603},"indent":[]}}],"position":{"start":{"line":9,"column":6,"offset":545},"end":{"line":9,"column":64,"offset":603},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":542},"end":{"line":10,"column":1,"offset":604},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strlen(string)          Returns the length of string. Does not include the null(\\0)","position":{"start":{"line":11,"column":6,"offset":610},"end":{"line":11,"column":89,"offset":693},"indent":[]}}],"position":{"start":{"line":11,"column":6,"offset":610},"end":{"line":11,"column":89,"offset":693},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":607},"end":{"line":12,"column":1,"offset":694},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strcmp(str1,str2)       Compares str1 with str2 returns integer result.If str1 Returns a positive integer when str1>str2.","position":{"start":{"line":13,"column":6,"offset":700},"end":{"line":13,"column":127,"offset":821},"indent":[]}}],"position":{"start":{"line":13,"column":6,"offset":700},"end":{"line":13,"column":127,"offset":821},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":697},"end":{"line":14,"column":1,"offset":822},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Strncpy(str1,str2,n)    It copies at most n characters of str2 to str1.If str2 has fewer than n characters, it pads str1 with null(‘\\o’) characters.","position":{"start":{"line":15,"column":6,"offset":828},"end":{"line":15,"column":154,"offset":976},"indent":[]}}],"position":{"start":{"line":15,"column":6,"offset":828},"end":{"line":15,"column":154,"offset":976},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":825},"end":{"line":16,"column":1,"offset":977},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Strchr(string,char)     Locates the position of the first occurrence of char within string and returns the address of the characterif it finds. and null if not.For ex-(“ Hello”,’l’)","position":{"start":{"line":17,"column":6,"offset":983},"end":{"line":17,"column":187,"offset":1164},"indent":[]}}],"position":{"start":{"line":17,"column":6,"offset":983},"end":{"line":17,"column":187,"offset":1164},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":980},"end":{"line":18,"column":1,"offset":1165},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strlwr()                converts all characters in a string from uppercase to lowercase.","position":{"start":{"line":19,"column":6,"offset":1171},"end":{"line":19,"column":94,"offset":1259},"indent":[]}}],"position":{"start":{"line":19,"column":6,"offset":1171},"end":{"line":19,"column":94,"offset":1259},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":1168},"end":{"line":20,"column":1,"offset":1260},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strupr()                converts all characters in a string from lower case to uppercase.","position":{"start":{"line":21,"column":6,"offset":1266},"end":{"line":21,"column":95,"offset":1355},"indent":[]}}],"position":{"start":{"line":21,"column":6,"offset":1266},"end":{"line":21,"column":95,"offset":1355},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":1263},"end":{"line":22,"column":1,"offset":1356},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strcpy() function       C does not allow you to assign the characters to a string directly.For example as in the statement name=”Java”; Instead use the strcpy() function. The strcpy() function works almost like a string-assignment operator. The syntax of the function is","position":{"start":{"line":23,"column":6,"offset":1362},"end":{"line":23,"column":276,"offset":1632},"indent":[]}}],"position":{"start":{"line":23,"column":6,"offset":1362},"end":{"line":23,"column":276,"offset":1632},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":1359},"end":{"line":24,"column":1,"offset":1633},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strcpy(string1,string2); Strcpy() function assigns the contents of string2 to string1.The string2 may be a character array variable or a string constant.","position":{"start":{"line":25,"column":6,"offset":1639},"end":{"line":25,"column":159,"offset":1792},"indent":[]}}],"position":{"start":{"line":25,"column":6,"offset":1639},"end":{"line":25,"column":159,"offset":1792},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":1636},"end":{"line":26,"column":1,"offset":1793},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strcpy(city1, city2);   This will assign the contents of the string variable city2 to the string variable city1.The size of the array city1 should be large enough to receive the contents of city2, if not compiler will lodge an error.","position":{"start":{"line":27,"column":6,"offset":1799},"end":{"line":27,"column":239,"offset":2032},"indent":[]}}],"position":{"start":{"line":27,"column":6,"offset":1799},"end":{"line":27,"column":239,"offset":2032},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":1796},"end":{"line":27,"column":239,"offset":2032},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":467},"end":{"line":27,"column":239,"offset":2032},"indent":[1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3]}}],"position":{"start":{"line":6,"column":1,"offset":309},"end":{"line":27,"column":239,"offset":2032},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4,"column":1,"offset":134},"end":{"line":27,"column":239,"offset":2032},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"strcat() function","position":{"start":{"line":29,"column":4,"offset":2037},"end":{"line":29,"column":21,"offset":2054},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":2034},"end":{"line":29,"column":21,"offset":2054},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The process of appending the characters of one string to the end of other string. Is called concatenation. The strcat() function joins two strings together.","position":{"start":{"line":30,"column":3,"offset":2057},"end":{"line":30,"column":159,"offset":2213},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":2057},"end":{"line":30,"column":159,"offset":2213},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2055},"end":{"line":30,"column":159,"offset":2213},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2055},"end":{"line":30,"column":159,"offset":2213},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"strcat(string1,string2)","position":{"start":{"line":32,"column":4,"offset":2218},"end":{"line":32,"column":27,"offset":2241},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2215},"end":{"line":32,"column":27,"offset":2241},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Here string1 & string2 are character arrays. When the function strcat is executed string2 is appended to string1.The string at string2 remains unchanged. Example","position":{"start":{"line":33,"column":3,"offset":2244},"end":{"line":33,"column":164,"offset":2405},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":2244},"end":{"line":33,"column":164,"offset":2405},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":2242},"end":{"line":33,"column":164,"offset":2405},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":2242},"end":{"line":33,"column":164,"offset":2405},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"strcpy(string1,”Web”);\nstrcpy(string2,”Mining”);\nPrintf(“%s”, strcat(string1,string2);","position":{"start":{"line":34,"column":1,"offset":2406},"end":{"line":38,"column":4,"offset":2502},"indent":[1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"From the above program segment the value of string1 becomes webmining. The string at str2 remains unchanged as mining. The variation in this function is strn(str1,str2,n) .This concatenates the n integer letters to str1. For example,","position":{"start":{"line":39,"column":3,"offset":2505},"end":{"line":39,"column":236,"offset":2738},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":2505},"end":{"line":39,"column":236,"offset":2738},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2503},"end":{"line":39,"column":236,"offset":2738},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2503},"end":{"line":39,"column":236,"offset":2738},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"strncat(stri,name,4);","position":{"start":{"line":40,"column":1,"offset":2739},"end":{"line":42,"column":4,"offset":2770},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This concatenates first 4 letters of string name to string stri.","position":{"start":{"line":43,"column":3,"offset":2773},"end":{"line":43,"column":67,"offset":2837},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":2773},"end":{"line":43,"column":67,"offset":2837},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2771},"end":{"line":43,"column":67,"offset":2837},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2771},"end":{"line":43,"column":67,"offset":2837},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"strlen() function","position":{"start":{"line":45,"column":4,"offset":2842},"end":{"line":45,"column":21,"offset":2859},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":2839},"end":{"line":45,"column":21,"offset":2859},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This function counts and returns the number of characters in a string. The length does not include a null character. The syntax is","position":{"start":{"line":46,"column":3,"offset":2862},"end":{"line":46,"column":133,"offset":2992},"indent":[]}}],"position":{"start":{"line":46,"column":3,"offset":2862},"end":{"line":46,"column":133,"offset":2992},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2860},"end":{"line":46,"column":133,"offset":2992},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2860},"end":{"line":46,"column":133,"offset":2992},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"n=strlen(string);\nWhere n is integer variable, which receives the value of length of the string.","position":{"start":{"line":47,"column":1,"offset":2993},"end":{"line":50,"column":4,"offset":3099},"indent":[1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"Example:\nint len;\nlen=strlen(“Coral Draw”);","position":{"start":{"line":51,"column":1,"offset":3100},"end":{"line":55,"column":4,"offset":3153},"indent":[1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Here the integer variable len will store the value 10 which is the length of given sting.","position":{"start":{"line":56,"column":3,"offset":3156},"end":{"line":56,"column":92,"offset":3245},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":3156},"end":{"line":56,"column":92,"offset":3245},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":3154},"end":{"line":56,"column":92,"offset":3245},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":3154},"end":{"line":56,"column":92,"offset":3245},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"strcmp() function","position":{"start":{"line":58,"column":4,"offset":3250},"end":{"line":58,"column":21,"offset":3267},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":3247},"end":{"line":58,"column":21,"offset":3267},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In c the values of two strings cannot be directly compare in a condition like if(string1==string2).","position":{"start":{"line":59,"column":3,"offset":3270},"end":{"line":59,"column":102,"offset":3369},"indent":[]}}],"position":{"start":{"line":59,"column":3,"offset":3270},"end":{"line":59,"column":102,"offset":3369},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":3268},"end":{"line":59,"column":102,"offset":3369},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The strcmp() function is used for this purpose.","position":{"start":{"line":60,"column":3,"offset":3372},"end":{"line":60,"column":50,"offset":3419},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":3372},"end":{"line":60,"column":50,"offset":3419},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":3370},"end":{"line":60,"column":50,"offset":3419},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This function returns a zerovalue if two strings are equal, or a non zero number if the strings are not the same.","position":{"start":{"line":61,"column":3,"offset":3422},"end":{"line":61,"column":116,"offset":3535},"indent":[]}}],"position":{"start":{"line":61,"column":3,"offset":3422},"end":{"line":61,"column":116,"offset":3535},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":3420},"end":{"line":61,"column":116,"offset":3535},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This returns a negative if the string1 is alphabetically less than the second and a positive number if the string is greater than the second.","position":{"start":{"line":62,"column":3,"offset":3538},"end":{"line":62,"column":144,"offset":3679},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":3538},"end":{"line":62,"column":144,"offset":3679},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":3536},"end":{"line":62,"column":144,"offset":3679},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The syntax of strcmp() is given below:","position":{"start":{"line":63,"column":3,"offset":3682},"end":{"line":63,"column":41,"offset":3720},"indent":[]}}],"position":{"start":{"line":63,"column":3,"offset":3682},"end":{"line":63,"column":41,"offset":3720},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3680},"end":{"line":63,"column":41,"offset":3720},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":3268},"end":{"line":63,"column":41,"offset":3720},"indent":[1,1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"Strcmp(string1,string2)","position":{"start":{"line":64,"column":1,"offset":3721},"end":{"line":66,"column":4,"offset":3754},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"String1 & string2 may be string variables or string constants.","position":{"start":{"line":67,"column":3,"offset":3757},"end":{"line":67,"column":65,"offset":3819},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":3757},"end":{"line":67,"column":65,"offset":3819},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3755},"end":{"line":67,"column":65,"offset":3819},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3755},"end":{"line":67,"column":65,"offset":3819},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"Example:\nstrcmp(“Book”,”Book”) will return zero because 2 strings are equal.\n\nstrcmp(“their”,”there”) will return a 9 which is the numeric difference between ASCII ‘i’ and ASCII ’r’.\n\nstrcmp(“The”, “the”) will return 32 which is the numeric difference between ASCII “T” & ASCII “t”.","position":{"start":{"line":68,"column":1,"offset":3820},"end":{"line":75,"column":4,"offset":4112},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"strcmpi() function","position":{"start":{"line":76,"column":4,"offset":4116},"end":{"line":76,"column":22,"offset":4134},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":4113},"end":{"line":76,"column":22,"offset":4134},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This function is same as strcmp() which compares 2 strings but not case sensitive.","position":{"start":{"line":77,"column":3,"offset":4137},"end":{"line":77,"column":85,"offset":4219},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":4137},"end":{"line":77,"column":85,"offset":4219},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":4135},"end":{"line":77,"column":85,"offset":4219},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":4135},"end":{"line":77,"column":85,"offset":4219},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":" For example\nstrcmpi(“THE”, ”the”); will return 0.","position":{"start":{"line":78,"column":1,"offset":4220},"end":{"line":81,"column":4,"offset":4280},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"strlwr () function","position":{"start":{"line":82,"column":4,"offset":4284},"end":{"line":82,"column":22,"offset":4302},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":4281},"end":{"line":82,"column":22,"offset":4302},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This function converts all characters in a string from uppercase to lowercase. The syntax is","position":{"start":{"line":83,"column":3,"offset":4305},"end":{"line":83,"column":95,"offset":4397},"indent":[]}}],"position":{"start":{"line":83,"column":3,"offset":4305},"end":{"line":83,"column":95,"offset":4397},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":4303},"end":{"line":83,"column":95,"offset":4397},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":4303},"end":{"line":83,"column":95,"offset":4397},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"strlwr(string);\nFor example:\n\nstrlwr(“APPLICATION”) converts the string to application","position":{"start":{"line":84,"column":1,"offset":4398},"end":{"line":89,"column":4,"offset":4494},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"strupr() function","position":{"start":{"line":90,"column":4,"offset":4498},"end":{"line":90,"column":21,"offset":4515},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":4495},"end":{"line":90,"column":21,"offset":4515},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This function converts all characters in a string from lower case to uppercase. The syntax is","position":{"start":{"line":91,"column":3,"offset":4518},"end":{"line":91,"column":96,"offset":4611},"indent":[]}}],"position":{"start":{"line":91,"column":3,"offset":4518},"end":{"line":91,"column":96,"offset":4611},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":4516},"end":{"line":91,"column":96,"offset":4611},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":4516},"end":{"line":91,"column":96,"offset":4611},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"strupr(string);","position":{"start":{"line":93,"column":4,"offset":4616},"end":{"line":93,"column":19,"offset":4631},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":4613},"end":{"line":93,"column":19,"offset":4631},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"For example strupr(“application”) will convert the string to APPLICATION.","position":{"start":{"line":94,"column":3,"offset":4634},"end":{"line":94,"column":76,"offset":4707},"indent":[]}}],"position":{"start":{"line":94,"column":3,"offset":4634},"end":{"line":94,"column":76,"offset":4707},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":4632},"end":{"line":94,"column":76,"offset":4707},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":4632},"end":{"line":94,"column":76,"offset":4707},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"C Character Functions","position":{"start":{"line":95,"column":4,"offset":4711},"end":{"line":95,"column":25,"offset":4732},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":4708},"end":{"line":95,"column":25,"offset":4732},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Apart from string functions C has character functions.","position":{"start":{"line":96,"column":3,"offset":4735},"end":{"line":96,"column":57,"offset":4789},"indent":[]}}],"position":{"start":{"line":96,"column":3,"offset":4735},"end":{"line":96,"column":57,"offset":4789},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":4733},"end":{"line":96,"column":57,"offset":4789},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"These functions are defined in ctype.h library file.","position":{"start":{"line":97,"column":3,"offset":4792},"end":{"line":97,"column":55,"offset":4844},"indent":[]}}],"position":{"start":{"line":97,"column":3,"offset":4792},"end":{"line":97,"column":55,"offset":4844},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":4790},"end":{"line":97,"column":55,"offset":4844},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Some of the character functions are given below.","position":{"start":{"line":98,"column":3,"offset":4847},"end":{"line":98,"column":51,"offset":4895},"indent":[]}}],"position":{"start":{"line":98,"column":3,"offset":4847},"end":{"line":98,"column":51,"offset":4895},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":4845},"end":{"line":98,"column":51,"offset":4895},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All the following function will Return true if","position":{"start":{"line":99,"column":3,"offset":4898},"end":{"line":99,"column":49,"offset":4944},"indent":[]}}],"position":{"start":{"line":99,"column":3,"offset":4898},"end":{"line":99,"column":49,"offset":4944},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int isalpha(c);                            c is a letter.","position":{"start":{"line":101,"column":6,"offset":4951},"end":{"line":101,"column":63,"offset":5008},"indent":[]}}],"position":{"start":{"line":101,"column":6,"offset":4951},"end":{"line":101,"column":63,"offset":5008},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":4948},"end":{"line":102,"column":1,"offset":5009},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int isupper(c);                            c is an upper case letter.","position":{"start":{"line":103,"column":6,"offset":5015},"end":{"line":103,"column":75,"offset":5084},"indent":[]}}],"position":{"start":{"line":103,"column":6,"offset":5015},"end":{"line":103,"column":75,"offset":5084},"indent":[]}}],"position":{"start":{"line":103,"column":3,"offset":5012},"end":{"line":104,"column":1,"offset":5085},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int islower(c);                            c is a lower case letter.","position":{"start":{"line":105,"column":6,"offset":5091},"end":{"line":105,"column":74,"offset":5159},"indent":[]}}],"position":{"start":{"line":105,"column":6,"offset":5091},"end":{"line":105,"column":74,"offset":5159},"indent":[]}}],"position":{"start":{"line":105,"column":3,"offset":5088},"end":{"line":106,"column":1,"offset":5160},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int isdigit(c);                              c is a digit ","position":{"start":{"line":107,"column":6,"offset":5166},"end":{"line":107,"column":64,"offset":5224},"indent":[]}},{"type":"linkReference","identifier":"0-9","label":"0-9","referenceType":"shortcut","children":[{"type":"text","value":"0-9","position":{"start":{"line":107,"column":65,"offset":5225},"end":{"line":107,"column":68,"offset":5228},"indent":[]}}],"position":{"start":{"line":107,"column":64,"offset":5224},"end":{"line":107,"column":69,"offset":5229},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":107,"column":69,"offset":5229},"end":{"line":107,"column":70,"offset":5230},"indent":[]}}],"position":{"start":{"line":107,"column":6,"offset":5166},"end":{"line":107,"column":70,"offset":5230},"indent":[]}}],"position":{"start":{"line":107,"column":3,"offset":5163},"end":{"line":108,"column":1,"offset":5231},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int isxdigit(c);                            c is a hexadecimal digit ","position":{"start":{"line":109,"column":6,"offset":5237},"end":{"line":109,"column":75,"offset":5306},"indent":[]}},{"type":"linkReference","identifier":"0-9a-fa-f","label":"0-9A-Fa-f","referenceType":"shortcut","children":[{"type":"text","value":"0-9A-Fa-f","position":{"start":{"line":109,"column":76,"offset":5307},"end":{"line":109,"column":85,"offset":5316},"indent":[]}}],"position":{"start":{"line":109,"column":75,"offset":5306},"end":{"line":109,"column":86,"offset":5317},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":109,"column":86,"offset":5317},"end":{"line":109,"column":87,"offset":5318},"indent":[]}}],"position":{"start":{"line":109,"column":6,"offset":5237},"end":{"line":109,"column":87,"offset":5318},"indent":[]}}],"position":{"start":{"line":109,"column":3,"offset":5234},"end":{"line":110,"column":1,"offset":5319},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int isalnum(c);                            c is an alphanumeric character (c is a letter or a digit);","position":{"start":{"line":111,"column":6,"offset":5325},"end":{"line":111,"column":107,"offset":5426},"indent":[]}}],"position":{"start":{"line":111,"column":6,"offset":5325},"end":{"line":111,"column":107,"offset":5426},"indent":[]}}],"position":{"start":{"line":111,"column":3,"offset":5322},"end":{"line":112,"column":1,"offset":5427},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int isspace(c);                             c is a SPACE, TAB, RETURN, NEWLINE, FORMFEED,","position":{"start":{"line":113,"column":6,"offset":5433},"end":{"line":113,"column":95,"offset":5522},"indent":[]}}],"position":{"start":{"line":113,"column":6,"offset":5433},"end":{"line":113,"column":95,"offset":5522},"indent":[]}}],"position":{"start":{"line":113,"column":3,"offset":5430},"end":{"line":114,"column":1,"offset":5523},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int ispunct(c);                             c is a punctuation character (neither control nor alphanumeric).","position":{"start":{"line":115,"column":6,"offset":5529},"end":{"line":115,"column":114,"offset":5637},"indent":[]}}],"position":{"start":{"line":115,"column":6,"offset":5529},"end":{"line":115,"column":114,"offset":5637},"indent":[]}}],"position":{"start":{"line":115,"column":3,"offset":5526},"end":{"line":116,"column":1,"offset":5638},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int isprint(c);                            c is a printing character.","position":{"start":{"line":117,"column":6,"offset":5644},"end":{"line":117,"column":75,"offset":5713},"indent":[]}}],"position":{"start":{"line":117,"column":6,"offset":5644},"end":{"line":117,"column":75,"offset":5713},"indent":[]}}],"position":{"start":{"line":117,"column":3,"offset":5641},"end":{"line":118,"column":1,"offset":5714},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int iscntrl(c);                             c is a delete character or ordinary control character.","position":{"start":{"line":119,"column":6,"offset":5720},"end":{"line":119,"column":104,"offset":5818},"indent":[]}}],"position":{"start":{"line":119,"column":6,"offset":5720},"end":{"line":119,"column":104,"offset":5818},"indent":[]}}],"position":{"start":{"line":119,"column":3,"offset":5717},"end":{"line":120,"column":1,"offset":5819},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int isascii(c);                           c is an ASCII character, code less than 0200.","position":{"start":{"line":121,"column":6,"offset":5825},"end":{"line":121,"column":93,"offset":5912},"indent":[]}}],"position":{"start":{"line":121,"column":6,"offset":5825},"end":{"line":121,"column":93,"offset":5912},"indent":[]}}],"position":{"start":{"line":121,"column":3,"offset":5822},"end":{"line":122,"column":1,"offset":5913},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int toupper(intc);                          convert character c to upper case (leave it alone if not lower)","position":{"start":{"line":123,"column":6,"offset":5919},"end":{"line":123,"column":113,"offset":6026},"indent":[]}}],"position":{"start":{"line":123,"column":6,"offset":5919},"end":{"line":123,"column":113,"offset":6026},"indent":[]}}],"position":{"start":{"line":123,"column":3,"offset":5916},"end":{"line":124,"column":1,"offset":6027},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"int tolower(int c);                         convert character c to lower case (leave it alone if not upper)","position":{"start":{"line":125,"column":6,"offset":6033},"end":{"line":125,"column":113,"offset":6140},"indent":[]}}],"position":{"start":{"line":125,"column":6,"offset":6033},"end":{"line":125,"column":113,"offset":6140},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":6030},"end":{"line":125,"column":113,"offset":6140},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":4948},"end":{"line":125,"column":113,"offset":6140},"indent":[1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3]}}],"position":{"start":{"line":99,"column":1,"offset":4896},"end":{"line":125,"column":113,"offset":6140},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":96,"column":1,"offset":4733},"end":{"line":125,"column":113,"offset":6140},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Example-1: Write a program to find out the length of a given string without using the library function strlen().","position":{"start":{"line":127,"column":4,"offset":6145},"end":{"line":127,"column":116,"offset":6257},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":6142},"end":{"line":127,"column":116,"offset":6257},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a program to find out the length of a given string without using the library function strlen().\n#include<stdio.h>\nvoid main()\n    {\n    char str[50];\n    char nul={‘\\0’}\n    int len;\n    printf(\"\\nENTER A STRING: \");\n    gets(str);\n    for(len=0; str[len]!=nul; len++);\n        printf(\"\\n THE LENGTH OF THE STRING IS %d\", len);\n    }","position":{"start":{"line":128,"column":1,"offset":6258},"end":{"line":141,"column":4,"offset":6609},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"Result:\nInput:\nENTER A STRING: This is string in C\nOutput:\nTHE LENGTH OF THE STRING IS 19. 146","position":{"start":{"line":142,"column":1,"offset":6610},"end":{"line":148,"column":4,"offset":6712},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example-2: Write a program to find out the length of a given string using the library function strlen().","position":{"start":{"line":149,"column":5,"offset":6717},"end":{"line":149,"column":109,"offset":6821},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":6713},"end":{"line":149,"column":109,"offset":6821},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a program to find out the length of a given string using the library function strlen().\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char name[30] = \"This is string in C\";\n    int len;\n    len= strlen( name );\n    printf( \"Length of string <%s> is %d.\\n\", name ,len);\n    }","position":{"start":{"line":150,"column":1,"offset":6822},"end":{"line":161,"column":4,"offset":7127},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"Output:\nLength of string < This is string in C > is19.","position":{"start":{"line":162,"column":1,"offset":7128},"end":{"line":165,"column":4,"offset":7190},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example-3: Write a program to print the reverse of a given string.","position":{"start":{"line":166,"column":5,"offset":7195},"end":{"line":166,"column":71,"offset":7261},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":7191},"end":{"line":166,"column":71,"offset":7261},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a program to print the reverse of a given string.\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char ch[100];\n    int i,len;\n    printf(\"\\n Enter a string: \");\n    gets(ch);\n    len= strlen(ch);\n    printf(\"\\n The string in the reverse order: \");\n    for(i=len-1; i>=0; i--)\n        printf(\"%c\", ch[i]);\n    }","position":{"start":{"line":167,"column":1,"offset":7262},"end":{"line":182,"column":4,"offset":7602},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"Result:\nInput\nEnter a string: strings are interesting.\nOutput\nThe string in the reverse order: .gnitseretni era sgnirts","position":{"start":{"line":183,"column":1,"offset":7603},"end":{"line":189,"column":4,"offset":7730},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example-4: Write a program to check if a given string is palindrome or not.","position":{"start":{"line":190,"column":5,"offset":7735},"end":{"line":190,"column":80,"offset":7810},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":7731},"end":{"line":190,"column":80,"offset":7810},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a program to check if a given string is palindrome or not.\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char a[100];\n    int i,len, flag=0;\n    printf(\"\\n Enter a string: \");\n    gets(a);\n    len=strlen(a);\n    for(i=0;i<len; i++)\n        {\n        if(a[i]==a[len-i-1])\n        flag=flag+1;\n        }\n    if(flag==len)\n        printf(\"\\n The string is palindrom\");\n    else\n        printf(\"\\n The string is not palindrom\");\n    }","position":{"start":{"line":191,"column":1,"offset":7811},"end":{"line":212,"column":4,"offset":8272},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"RESULT:\nInput\nEnter a string: madam\nOutput\nThe string is palindrome","position":{"start":{"line":213,"column":1,"offset":8273},"end":{"line":219,"column":4,"offset":8348},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example-5: Write a program to count the number of vowels in a given string.","position":{"start":{"line":220,"column":5,"offset":8353},"end":{"line":220,"column":80,"offset":8428},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":8349},"end":{"line":220,"column":80,"offset":8428},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a program to count the number of vowels in a given string.\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char a[100];\n    int leni, vow=0;\n    printf(\"\\n ENTER A STRING: \");\n    gets(a);\n    len=strlen(a);\n    for(i=0;i<len; i++)\n        {\n        if(a[i]=='a' || a[i]=='A' || a[i]=='e' || a[i]=='E' || a[i]=='i' ||\n        a[i]=='I' || a[i]=='o' || a[i]=='O' || a[i]=='u' || a[i]=='U')\n        vow=vow+1;\n        }\n    printf(\"\\n There are %d vowels in the string\", vow);\n    }","position":{"start":{"line":221,"column":1,"offset":8429},"end":{"line":240,"column":4,"offset":8938},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"RESULT:\nInput\nEnter a string: Evening\nOutput\nThere are 3 vowels in the string","position":{"start":{"line":241,"column":1,"offset":8939},"end":{"line":247,"column":4,"offset":9024},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Example-6: Write a program to count the number of words in a given string. Two words are separated by one or more blank spaces.","position":{"start":{"line":248,"column":5,"offset":9029},"end":{"line":248,"column":132,"offset":9156},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":9025},"end":{"line":248,"column":132,"offset":9156},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//Write a program to count the number of words in a given string. Two words are separated by one or more blank spaces.\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char a[100];\n    int len, word, i =0;\n    printf(\"\\n Enter a string: \");\n    gets(a);\n    len=strlen(a);\n    for(i=0;i<len; i++)\n        {\n        if( a[i] !=' ' && a[i+1]==' ')\n        word=word+1;\n        }\n    printf(\"\\n There are %d words in the string\", word);\n    }","position":{"start":{"line":249,"column":1,"offset":9157},"end":{"line":267,"column":4,"offset":9616},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"RESULT:\nInput\nEnter a string: Strings are very interesting.\nOutput\nThere are 4 words in the string","position":{"start":{"line":268,"column":1,"offset":9617},"end":{"line":274,"column":4,"offset":9723},"indent":[1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"String Function in C\",\"category\":\"Basic C Programming\",\"author\":\"Anonymous\",\"tags\":[\"#c\",\"#tutorial\"],\"thumbnailText\":\"C Programming Tutorial-30\",\"date\":\"2021-03-02T00:00:00.000Z\"}","position":{"start":{"line":276,"column":1,"offset":9725},"end":{"line":276,"column":219,"offset":9943},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":276,"column":219,"offset":9943}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"String Function in C\",\n  \"category\": \"Basic C Programming\",\n  \"author\": \"Anonymous\",\n  \"tags\": [\"#c\", \"#tutorial\"],\n  \"thumbnailText\": \"C Programming Tutorial-30\",\n  \"date\": \"2021-03-02T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"string-function-in-c\"\n  }, \"String Function in C\"), mdx(\"p\", null, \"C does not provide any operators for string. Because of this C has built in string functions in its library.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"C library supports a large number of string handling functions that can be used to perform many of the string manipulations.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Some of the string functions are given below.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"To do all the operations described here it is essential to include string.h library header file in the program. Some of the String Functions in string.h.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strcpy(str1,str2)       copies str2 to str1 including the null (\\\\0).\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strcat(str1,str2)       Appends str2 to end of string str1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strlen(string)          Returns the length of string. Does not include the null(\\\\0)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strcmp(str1,str2)       Compares str1 with str2 returns integer result.If str1 Returns a positive integer when str1>str2.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Strncpy(str1,str2,n)    It copies at most n characters of str2 to str1.If str2 has fewer than n characters, it pads str1 with null(\\u2018\\\\o\\u2019) characters.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Strchr(string,char)     Locates the position of the first occurrence of char within string and returns the address of the characterif it finds. and null if not.For ex-(\\u201C Hello\\u201D,\\u2019l\\u2019)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strlwr()                converts all characters in a string from uppercase to lowercase.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strupr()                converts all characters in a string from lower case to uppercase.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strcpy() function       C does not allow you to assign the characters to a string directly.For example as in the statement name=\\u201DJava\\u201D; Instead use the strcpy() function. The strcpy() function works almost like a string-assignment operator. The syntax of the function is\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strcpy(string1,string2); Strcpy() function assigns the contents of string2 to string1.The string2 may be a character array variable or a string constant.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"strcpy(city1, city2);   This will assign the contents of the string variable city2 to the string variable city1.The size of the array city1 should be large enough to receive the contents of city2, if not compiler will lodge an error.\"))))), mdx(\"h2\", {\n    \"id\": \"strcat-function\"\n  }, \"strcat() function\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The process of appending the characters of one string to the end of other string. Is called concatenation. The strcat() function joins two strings together.\")), mdx(\"h2\", {\n    \"id\": \"strcatstring1string2\"\n  }, \"strcat(string1,string2)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Here string1 & string2 are character arrays. When the function strcat is executed string2 is appended to string1.The string at string2 remains unchanged. Example\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"strcpy(string1,\\u201DWeb\\u201D);\\nstrcpy(string2,\\u201DMining\\u201D);\\nPrintf(\\u201C%s\\u201D, strcat(string1,string2);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"From the above program segment the value of string1 becomes webmining. The string at str2 remains unchanged as mining. The variation in this function is strn(str1,str2,n) .This concatenates the n integer letters to str1. For example,\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"strncat(stri,name,4);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This concatenates first 4 letters of string name to string stri.\")), mdx(\"h2\", {\n    \"id\": \"strlen-function\"\n  }, \"strlen() function\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This function counts and returns the number of characters in a string. The length does not include a null character. The syntax is\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"n=strlen(string);\\nWhere n is integer variable, which receives the value of length of the string.\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"Example:\\nint len;\\nlen=strlen(\\u201CCoral Draw\\u201D);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Here the integer variable len will store the value 10 which is the length of given sting.\")), mdx(\"h2\", {\n    \"id\": \"strcmp-function\"\n  }, \"strcmp() function\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In c the values of two strings cannot be directly compare in a condition like if(string1==string2).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The strcmp() function is used for this purpose.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This function returns a zerovalue if two strings are equal, or a non zero number if the strings are not the same.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This returns a negative if the string1 is alphabetically less than the second and a positive number if the string is greater than the second.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The syntax of strcmp() is given below:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"Strcmp(string1,string2)\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"String1 & string2 may be string variables or string constants.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"Example:\\nstrcmp(\\u201CBook\\u201D,\\u201DBook\\u201D) will return zero because 2 strings are equal.\\n\\nstrcmp(\\u201Ctheir\\u201D,\\u201Dthere\\u201D) will return a 9 which is the numeric difference between ASCII \\u2018i\\u2019 and ASCII \\u2019r\\u2019.\\n\\nstrcmp(\\u201CThe\\u201D, \\u201Cthe\\u201D) will return 32 which is the numeric difference between ASCII \\u201CT\\u201D & ASCII \\u201Ct\\u201D.\\n\")), mdx(\"h2\", {\n    \"id\": \"strcmpi-function\"\n  }, \"strcmpi() function\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This function is same as strcmp() which compares 2 strings but not case sensitive.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \" For example\\nstrcmpi(\\u201CTHE\\u201D, \\u201Dthe\\u201D); will return 0.\\n\")), mdx(\"h2\", {\n    \"id\": \"strlwr--function\"\n  }, \"strlwr () function\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This function converts all characters in a string from uppercase to lowercase. The syntax is\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"strlwr(string);\\nFor example:\\n\\nstrlwr(\\u201CAPPLICATION\\u201D) converts the string to application\\n\")), mdx(\"h2\", {\n    \"id\": \"strupr-function\"\n  }, \"strupr() function\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This function converts all characters in a string from lower case to uppercase. The syntax is\")), mdx(\"h2\", {\n    \"id\": \"struprstring\"\n  }, \"strupr(string);\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For example strupr(\\u201Capplication\\u201D) will convert the string to APPLICATION.\")), mdx(\"h2\", {\n    \"id\": \"c-character-functions\"\n  }, \"C Character Functions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Apart from string functions C has character functions.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"These functions are defined in ctype.h library file.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Some of the character functions are given below.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"All the following function will Return true if\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int isalpha(c);                            c is a letter.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int isupper(c);                            c is an upper case letter.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int islower(c);                            c is a lower case letter.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int isdigit(c);                              c is a digit \", \"[0-9]\", \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int isxdigit(c);                            c is a hexadecimal digit \", \"[0-9A-Fa-f]\", \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int isalnum(c);                            c is an alphanumeric character (c is a letter or a digit);\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int isspace(c);                             c is a SPACE, TAB, RETURN, NEWLINE, FORMFEED,\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int ispunct(c);                             c is a punctuation character (neither control nor alphanumeric).\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int isprint(c);                            c is a printing character.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int iscntrl(c);                             c is a delete character or ordinary control character.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int isascii(c);                           c is an ASCII character, code less than 0200.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int toupper(intc);                          convert character c to upper case (leave it alone if not lower)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"int tolower(int c);                         convert character c to lower case (leave it alone if not upper)\"))))), mdx(\"h2\", {\n    \"id\": \"example-1-write-a-program-to-find-out-the-length-of-a-given-string-without-using-the-library-function-strlen\"\n  }, \"Example-1: Write a program to find out the length of a given string without using the library function strlen().\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a program to find out the length of a given string without using the library function strlen().\\n#include<stdio.h>\\nvoid main()\\n    {\\n    char str[50];\\n    char nul={\\u2018\\\\0\\u2019}\\n    int len;\\n    printf(\\\"\\\\nENTER A STRING: \\\");\\n    gets(str);\\n    for(len=0; str[len]!=nul; len++);\\n        printf(\\\"\\\\n THE LENGTH OF THE STRING IS %d\\\", len);\\n    }\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Result:\\nInput:\\nENTER A STRING: This is string in C\\nOutput:\\nTHE LENGTH OF THE STRING IS 19. 146\\n\")), mdx(\"h3\", {\n    \"id\": \"example-2-write-a-program-to-find-out-the-length-of-a-given-string-using-the-library-function-strlen\"\n  }, \"Example-2: Write a program to find out the length of a given string using the library function strlen().\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a program to find out the length of a given string using the library function strlen().\\n#include<stdio.h>\\n#include<string.h>\\nvoid main()\\n    {\\n    char name[30] = \\\"This is string in C\\\";\\n    int len;\\n    len= strlen( name );\\n    printf( \\\"Length of string <%s> is %d.\\\\n\\\", name ,len);\\n    }\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Output:\\nLength of string < This is string in C > is19.\\n\")), mdx(\"h3\", {\n    \"id\": \"example-3-write-a-program-to-print-the-reverse-of-a-given-string\"\n  }, \"Example-3: Write a program to print the reverse of a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a program to print the reverse of a given string.\\n#include<stdio.h>\\n#include<string.h>\\nvoid main()\\n    {\\n    char ch[100];\\n    int i,len;\\n    printf(\\\"\\\\n Enter a string: \\\");\\n    gets(ch);\\n    len= strlen(ch);\\n    printf(\\\"\\\\n The string in the reverse order: \\\");\\n    for(i=len-1; i>=0; i--)\\n        printf(\\\"%c\\\", ch[i]);\\n    }\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Result:\\nInput\\nEnter a string: strings are interesting.\\nOutput\\nThe string in the reverse order: .gnitseretni era sgnirts\\n\")), mdx(\"h3\", {\n    \"id\": \"example-4-write-a-program-to-check-if-a-given-string-is-palindrome-or-not\"\n  }, \"Example-4: Write a program to check if a given string is palindrome or not.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a program to check if a given string is palindrome or not.\\n#include<stdio.h>\\n#include<string.h>\\nvoid main()\\n    {\\n    char a[100];\\n    int i,len, flag=0;\\n    printf(\\\"\\\\n Enter a string: \\\");\\n    gets(a);\\n    len=strlen(a);\\n    for(i=0;i<len; i++)\\n        {\\n        if(a[i]==a[len-i-1])\\n        flag=flag+1;\\n        }\\n    if(flag==len)\\n        printf(\\\"\\\\n The string is palindrom\\\");\\n    else\\n        printf(\\\"\\\\n The string is not palindrom\\\");\\n    }\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"RESULT:\\nInput\\nEnter a string: madam\\nOutput\\nThe string is palindrome\\n\")), mdx(\"h3\", {\n    \"id\": \"example-5-write-a-program-to-count-the-number-of-vowels-in-a-given-string\"\n  }, \"Example-5: Write a program to count the number of vowels in a given string.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a program to count the number of vowels in a given string.\\n#include<stdio.h>\\n#include<string.h>\\nvoid main()\\n    {\\n    char a[100];\\n    int leni, vow=0;\\n    printf(\\\"\\\\n ENTER A STRING: \\\");\\n    gets(a);\\n    len=strlen(a);\\n    for(i=0;i<len; i++)\\n        {\\n        if(a[i]=='a' || a[i]=='A' || a[i]=='e' || a[i]=='E' || a[i]=='i' ||\\n        a[i]=='I' || a[i]=='o' || a[i]=='O' || a[i]=='u' || a[i]=='U')\\n        vow=vow+1;\\n        }\\n    printf(\\\"\\\\n There are %d vowels in the string\\\", vow);\\n    }\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"RESULT:\\nInput\\nEnter a string: Evening\\nOutput\\nThere are 3 vowels in the string\\n\")), mdx(\"h3\", {\n    \"id\": \"example-6-write-a-program-to-count-the-number-of-words-in-a-given-string-two-words-are-separated-by-one-or-more-blank-spaces\"\n  }, \"Example-6: Write a program to count the number of words in a given string. Two words are separated by one or more blank spaces.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"//Write a program to count the number of words in a given string. Two words are separated by one or more blank spaces.\\n#include<stdio.h>\\n#include<string.h>\\nvoid main()\\n    {\\n    char a[100];\\n    int len, word, i =0;\\n    printf(\\\"\\\\n Enter a string: \\\");\\n    gets(a);\\n    len=strlen(a);\\n    for(i=0;i<len; i++)\\n        {\\n        if( a[i] !=' ' && a[i+1]==' ')\\n        word=word+1;\\n        }\\n    printf(\\\"\\\\n There are %d words in the string\\\", word);\\n    }\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"RESULT:\\nInput\\nEnter a string: Strings are very interesting.\\nOutput\\nThere are 4 words in the string\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"String Function in C\",\n  \"category\": \"Basic C Programming\",\n  \"author\": \"Anonymous\",\n  \"tags\": [\"#c\", \"#tutorial\"],\n  \"thumbnailText\": \"C Programming Tutorial-30\",\n  \"date\": \"2021-03-02T00:00:00.000Z\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"string-function-in-c\"\n    }}>{`String Function in C`}</h2>\n    <p>{`C does not provide any operators for string. Because of this C has built in string functions in its library.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`C library supports a large number of string handling functions that can be used to perform many of the string manipulations.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Some of the string functions are given below.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To do all the operations described here it is essential to include string.h library header file in the program. Some of the String Functions in string.h.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strcpy(str1,str2)       copies str2 to str1 including the null (\\\\0).`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strcat(str1,str2)       Appends str2 to end of string str1`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strlen(string)          Returns the length of string. Does not include the null(\\\\0)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strcmp(str1,str2)       Compares str1 with str2 returns integer result.If str1 Returns a positive integer when str1>str2.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Strncpy(str1,str2,n)    It copies at most n characters of str2 to str1.If str2 has fewer than n characters, it pads str1 with null(‘\\\\o’) characters.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Strchr(string,char)     Locates the position of the first occurrence of char within string and returns the address of the characterif it finds. and null if not.For ex-(“ Hello”,’l’)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strlwr()                converts all characters in a string from uppercase to lowercase.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strupr()                converts all characters in a string from lower case to uppercase.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strcpy() function       C does not allow you to assign the characters to a string directly.For example as in the statement name=”Java”; Instead use the strcpy() function. The strcpy() function works almost like a string-assignment operator. The syntax of the function is`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strcpy(string1,string2); Strcpy() function assigns the contents of string2 to string1.The string2 may be a character array variable or a string constant.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`strcpy(city1, city2);   This will assign the contents of the string variable city2 to the string variable city1.The size of the array city1 should be large enough to receive the contents of city2, if not compiler will lodge an error.`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"strcat-function\"\n    }}>{`strcat() function`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The process of appending the characters of one string to the end of other string. Is called concatenation. The strcat() function joins two strings together.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"strcatstring1string2\"\n    }}>{`strcat(string1,string2)`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Here string1 & string2 are character arrays. When the function strcat is executed string2 is appended to string1.The string at string2 remains unchanged. Example`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`strcpy(string1,”Web”);\nstrcpy(string2,”Mining”);\nPrintf(“%s”, strcat(string1,string2);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`From the above program segment the value of string1 becomes webmining. The string at str2 remains unchanged as mining. The variation in this function is strn(str1,str2,n) .This concatenates the n integer letters to str1. For example,`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`strncat(stri,name,4);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`This concatenates first 4 letters of string name to string stri.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"strlen-function\"\n    }}>{`strlen() function`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`This function counts and returns the number of characters in a string. The length does not include a null character. The syntax is`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`n=strlen(string);\nWhere n is integer variable, which receives the value of length of the string.\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`Example:\nint len;\nlen=strlen(“Coral Draw”);\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Here the integer variable len will store the value 10 which is the length of given sting.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"strcmp-function\"\n    }}>{`strcmp() function`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`In c the values of two strings cannot be directly compare in a condition like if(string1==string2).`}</li>\n      <li parentName=\"ul\">{`The strcmp() function is used for this purpose.`}</li>\n      <li parentName=\"ul\">{`This function returns a zerovalue if two strings are equal, or a non zero number if the strings are not the same.`}</li>\n      <li parentName=\"ul\">{`This returns a negative if the string1 is alphabetically less than the second and a positive number if the string is greater than the second.`}</li>\n      <li parentName=\"ul\">{`The syntax of strcmp() is given below:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`Strcmp(string1,string2)\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`String1 & string2 may be string variables or string constants.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`Example:\nstrcmp(“Book”,”Book”) will return zero because 2 strings are equal.\n\nstrcmp(“their”,”there”) will return a 9 which is the numeric difference between ASCII ‘i’ and ASCII ’r’.\n\nstrcmp(“The”, “the”) will return 32 which is the numeric difference between ASCII “T” & ASCII “t”.\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"strcmpi-function\"\n    }}>{`strcmpi() function`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`This function is same as strcmp() which compares 2 strings but not case sensitive.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{` For example\nstrcmpi(“THE”, ”the”); will return 0.\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"strlwr--function\"\n    }}>{`strlwr () function`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`This function converts all characters in a string from uppercase to lowercase. The syntax is`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`strlwr(string);\nFor example:\n\nstrlwr(“APPLICATION”) converts the string to application\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"strupr-function\"\n    }}>{`strupr() function`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`This function converts all characters in a string from lower case to uppercase. The syntax is`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"struprstring\"\n    }}>{`strupr(string);`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`For example strupr(“application”) will convert the string to APPLICATION.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"c-character-functions\"\n    }}>{`C Character Functions`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Apart from string functions C has character functions.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`These functions are defined in ctype.h library file.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Some of the character functions are given below.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`All the following function will Return true if`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int isalpha(c);                            c is a letter.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int isupper(c);                            c is an upper case letter.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int islower(c);                            c is a lower case letter.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int isdigit(c);                              c is a digit `}{`[0-9]`}{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int isxdigit(c);                            c is a hexadecimal digit `}{`[0-9A-Fa-f]`}{`.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int isalnum(c);                            c is an alphanumeric character (c is a letter or a digit);`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int isspace(c);                             c is a SPACE, TAB, RETURN, NEWLINE, FORMFEED,`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int ispunct(c);                             c is a punctuation character (neither control nor alphanumeric).`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int isprint(c);                            c is a printing character.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int iscntrl(c);                             c is a delete character or ordinary control character.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int isascii(c);                           c is an ASCII character, code less than 0200.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int toupper(intc);                          convert character c to upper case (leave it alone if not lower)`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`int tolower(int c);                         convert character c to lower case (leave it alone if not upper)`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example-1-write-a-program-to-find-out-the-length-of-a-given-string-without-using-the-library-function-strlen\"\n    }}>{`Example-1: Write a program to find out the length of a given string without using the library function strlen().`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a program to find out the length of a given string without using the library function strlen().\n#include<stdio.h>\nvoid main()\n    {\n    char str[50];\n    char nul={‘\\\\0’}\n    int len;\n    printf(\"\\\\nENTER A STRING: \");\n    gets(str);\n    for(len=0; str[len]!=nul; len++);\n        printf(\"\\\\n THE LENGTH OF THE STRING IS %d\", len);\n    }\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`Result:\nInput:\nENTER A STRING: This is string in C\nOutput:\nTHE LENGTH OF THE STRING IS 19. 146\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-2-write-a-program-to-find-out-the-length-of-a-given-string-using-the-library-function-strlen\"\n    }}>{`Example-2: Write a program to find out the length of a given string using the library function strlen().`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a program to find out the length of a given string using the library function strlen().\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char name[30] = \"This is string in C\";\n    int len;\n    len= strlen( name );\n    printf( \"Length of string <%s> is %d.\\\\n\", name ,len);\n    }\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`Output:\nLength of string < This is string in C > is19.\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-3-write-a-program-to-print-the-reverse-of-a-given-string\"\n    }}>{`Example-3: Write a program to print the reverse of a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a program to print the reverse of a given string.\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char ch[100];\n    int i,len;\n    printf(\"\\\\n Enter a string: \");\n    gets(ch);\n    len= strlen(ch);\n    printf(\"\\\\n The string in the reverse order: \");\n    for(i=len-1; i>=0; i--)\n        printf(\"%c\", ch[i]);\n    }\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`Result:\nInput\nEnter a string: strings are interesting.\nOutput\nThe string in the reverse order: .gnitseretni era sgnirts\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-4-write-a-program-to-check-if-a-given-string-is-palindrome-or-not\"\n    }}>{`Example-4: Write a program to check if a given string is palindrome or not.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a program to check if a given string is palindrome or not.\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char a[100];\n    int i,len, flag=0;\n    printf(\"\\\\n Enter a string: \");\n    gets(a);\n    len=strlen(a);\n    for(i=0;i<len; i++)\n        {\n        if(a[i]==a[len-i-1])\n        flag=flag+1;\n        }\n    if(flag==len)\n        printf(\"\\\\n The string is palindrom\");\n    else\n        printf(\"\\\\n The string is not palindrom\");\n    }\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`RESULT:\nInput\nEnter a string: madam\nOutput\nThe string is palindrome\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-5-write-a-program-to-count-the-number-of-vowels-in-a-given-string\"\n    }}>{`Example-5: Write a program to count the number of vowels in a given string.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a program to count the number of vowels in a given string.\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char a[100];\n    int leni, vow=0;\n    printf(\"\\\\n ENTER A STRING: \");\n    gets(a);\n    len=strlen(a);\n    for(i=0;i<len; i++)\n        {\n        if(a[i]=='a' || a[i]=='A' || a[i]=='e' || a[i]=='E' || a[i]=='i' ||\n        a[i]=='I' || a[i]=='o' || a[i]=='O' || a[i]=='u' || a[i]=='U')\n        vow=vow+1;\n        }\n    printf(\"\\\\n There are %d vowels in the string\", vow);\n    }\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`RESULT:\nInput\nEnter a string: Evening\nOutput\nThere are 3 vowels in the string\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-6-write-a-program-to-count-the-number-of-words-in-a-given-string-two-words-are-separated-by-one-or-more-blank-spaces\"\n    }}>{`Example-6: Write a program to count the number of words in a given string. Two words are separated by one or more blank spaces.`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`//Write a program to count the number of words in a given string. Two words are separated by one or more blank spaces.\n#include<stdio.h>\n#include<string.h>\nvoid main()\n    {\n    char a[100];\n    int len, word, i =0;\n    printf(\"\\\\n Enter a string: \");\n    gets(a);\n    len=strlen(a);\n    for(i=0;i<len; i++)\n        {\n        if( a[i] !=' ' && a[i+1]==' ')\n        word=word+1;\n        }\n    printf(\"\\\\n There are %d words in the string\", word);\n    }\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`RESULT:\nInput\nEnter a string: Strings are very interesting.\nOutput\nThere are 4 words in the string\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}